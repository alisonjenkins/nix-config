name: Build and Cache Nix Flake

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        configuration:
          # - .#nixosConfigurations.ali-laptop.config.system.build.toplevel
          # - .#nixosConfigurations.ali-steam-deck.config.system.build.toplevel
          # - .#nixosConfigurations.dev-vm.config.system.build.toplevel
          - .#nixosConfigurations.ali-desktop.config.system.build.toplevel
          - .#nixosConfigurations.ali-framework-laptop.config.system.build.toplevel
          - .#nixosConfigurations.home-k8s-master-1.config.system.build.toplevel
          - .#nixosConfigurations.home-k8s-server-1.config.system.build.toplevel
          - .#nixosConfigurations.home-kvm-hypervisor-1.config.system.build.toplevel
          - .#nixosConfigurations.home-storage-server-1.config.system.build.toplevel
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Set USER env variable
        run: echo "USER=runner" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v33
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            extra-substituters = [
              "https://ajenkins-public.cachix.org"
              "https://cosmic.cachix.org/"
              "https://hyprland.cachix.org"
              "https://nix-community.cachix.org"
              "https://nix-gaming.cachix.org"
            ];
            extra-trusted-public-keys = [
              "ajenkins-public.cachix.org-1:w/uYRGLft8KxQhPtQI1KPBy6j2eZRR8vLZjgLIKntzA="
              "cosmic.cachix.org-1:Dya9IyXD4xdBehWjrkPv6rtxpmMdRel02smYzA85dPE="
              "hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc="
              "nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs="
              "nix-gaming.cachix.org-1:nbjlureqMbRAxR1gJ/f3hxemL9svXaZF/Ees8vCUUs4="
            ];
      # - name: Restore and cache Nix store
      #   uses: nix-community/cache-nix-action@v5
      #   with:
      #     primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
      #     restore-prefixes-first-match: nix-${{ runner.os }}-
      #     gc-max-store-size-linux: 1073741824
      #     purge: true
      #     purge-prefixes: cache-${{ runner.os }}-
      #     purge-created: 0
      #     purge-primary-key: never
      # - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v16
        with:
          name: ajenkins-public
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: DeterminateSystems/flake-checker-action@main
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Run nix build for ${{ matrix.configuration }}
        run: |
          nix build --print-out-paths --no-link '${{ matrix.configuration }}'
      - name: Push to cache
        run: cachix push ajenkins-public $(nix path-info --all)
